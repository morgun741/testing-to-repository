import os
import tkinter as tk
from tkinter import ttk
import openpyxl
import csv
from pathlib import Path

courses = {
    "Профессиональная подготовка по профессии рабочего  'Животновод'": "'Животновод'",
    "Ультразвуковая диагностика болезней внутренних органов мелких домашних животных ЭхоКГ": "Ультразвуковая диагностика",
    "Внутренние незаразные болезни сельскохозяйственных животных": "Незаразные болезни животных",
    "Обслуживание оборудования подстанций электрических сетей": "Обслуживание оборудования",
    "Организация и функционирование крестьянских фермерских хозяйств": "Организация фермерских хозяйств",
    "Контроль технического состояния автотранспортных средств": "Технический контроль транспорта",
    "Биологическая безопасность при работе с микроорганизмами различных групп патогенности": "Биологическая безопасность",
    "Бухгалтерский  учет и налогообложение": "Бухгалтерский учёт",
    "Диспетчерская деятельность в сфере автомобильного и городского наземного электрического транспорта": "Диспетчерская деятельность",
    "Безопасность движения на автомобильном транспорте и городском наземном электрическом транспорте": "Безопасность движения",
    "Разведение и выращивание объектов аквакультуры": "Выращивание обЪектов аквакультуры",
    "Программа повышения квалификации 'Информационно-коммуникационные технологии  в профессиональной деятельности преподавателя' копия 1": "Информационные_технологии 1",
    "Программа повышения квалификации 'Информационно-коммуникационные технологии  в профессиональной деятельности преподавателя'": "Информационные_технологии",
    "Программа повышения квалификации 'Реализация инклюзивного образования в вузе'": "Образование в вузе",
    "Производство экологически чистой продукции растениеводства": "Экология продукции растениеводства",
    "Флористика": "Флористика",
    "Меры борьбы с борщевиком Сосновского": "Меры борьбы с борщевиком Сосновского",
    "Безопасное обращение с пестицидами и агрохимикатами": "Безопасная эксплуатация агрохимикатов",
    "Организация профессионального обучения по программам подготовки водителей": "Подготовка водителей",
    "Ультразвуковая диагностика болезней внутренних органов мелких домашних животных": "Ультразвуковая диагностика",
    "Безопасность строительства и осуществление строительного контроля": "Строительный контроль",
    "Кооперация как механизм развития сельскохозяйственного производства и сельских территорий": "Кооперация",
    "Применение графического пакета КОМПАС-3D в производстве и образовании": "Применение КОМПАС-3D",
    "Физика": "Физика",
    "Проведение послеубойной ветеринарно-санитарной экспертизы мяса и мясопродуктов": "Ветеринарно-санитарная экспертиза",
    "Технология принятия управленческих решений": "Технология принятия управленческих решений",
    "Тьюторская и волонтерская деятельность по сопровождению обучающихся с ограниченными возможностями здоровья в образовательной организации профессионального образования": "Тьюторская и волонтерская деятельность",
    "Русский язык  как иностранный": "Русский язык  как иностранный",
    "Разработка программного обеспечения для микроконтроллеров": "Разработка ПО",
    "Менеджмент в образовании. Управление структурным подразделением организации.": "Менеджмент в образовании",
    "Правовые аспекты фармацевтической деятельности в сфере обращения лекарственных средств для ветеринарного применения (Трескин Михаил Сергеевич)": "Правовые аспекты фармацефтической деятельности",
    "Строительство, реконструкция и капитальный ремонт объектов капитального строительства": "СРиРОКС",
    "Технология переработки мяса и мясопродуктов": "Технология переработки мяса и мясопродуктов",
    "Теория и методика преподавания общеобразовательных дисциплин иностранным студентам": "Теория и методика преподавания",
    "Немецкий в тестах: эффективно и просто": "Немецкий в тестах: эффективно и просто",
    "Английский в тестах: эффективно и просто": "Английский в тестах: эффективно и просто",
    "Безопасность жизнедеятельности в сельскохозяйственном производстве (Величко И.И., Журавлева Н.Н.)": "Бжд_Величко@Журавлёва",
    "Возобновляемые источники энергии / Regenerative Energiequellen(Волхонов М.С., Журавлева Н.Н.)": "ВИЭ_Волхонов@Журавлева",
    "Обучение охране труда руководителей производственной практики": "Обучение охране труда руководителей производственной",
    "Охрана труда": "Охрана труда",
    "Педагогические технологии в профессиональном образовании": "Педагогические технологии",
    "Эксплуатация, обслуживание, санитарное содержание и благоустройство многоквартирного дома": "ЭОССиБМД",
}


def write_row(writer, row):
    pass


def get_entry4():
    fields = ['username', 'lastname', 'firstname', 'email', 'password', 'course1']
    value1 = entry1.get()
    value2 = entry2.get()
    # value3 = entry3.get()
    value4 = combo4.get()
    personal_data = value1.split()
    words = {
        "А": "A", "Б": "B", "В": "V", "Г": "G", "Д": "D", "Е": "Ye", "Ё": "Yo",
        "Ж": "Zh", "З": "Z", "И": "I", "Й": "Y", "К": "K", "Л": "L", "М": "M",
        "Н": "N", "О": "O", "П": "P", "Р": "R", "С": "S", "Т": "T", "У": "U", "Ф": "F",
        "Х": "Kh", "Ц": "Ts", "Ч": "Ch", "Ш": "Sh", "Щ": "Shch", "Ы": "Y", "Э": "E",
        "Ю": "Yu", "Я": "Ya", "а": "a", "б": "b", "в": "v", "г": "g", "д": "d",
        "е": "ye", "ё": "yo", "ж": "zh", "з": "z", "и": "i", "й": "y", "к": "k",
        "л": "l", "м": "m", "н": "n", "о": "o", "п": "p", "р": "r", "с": "s", "т": "t",
        "у": "u", "ф": "f", "х": "kh", "ц": "ts", "ч": "ch", "ш": "sh", "щ": "shch",
        "ъ": "", "ы": "y", "ь": "", "э": "e", "ю": "yu", "я": "ya"
    }
    tb1 = personal_data[0].maketrans(words)
    last_name = personal_data[0].translate(tb1)
    entry5.delete(0, tk.END)
    entry5.insert(0, (last_name + "-PK-2022").lower())
    entry6.delete(0, tk.END)
    entry6.insert(0, ("Zz-12345"))
    value5 = entry5.get()
    value6 = entry6.get()
    value8 = (last_name + "-PK-2022@mail.ru").lower()
    a = courses[f'{value4}']
    entry7.delete(0, tk.END)
    entry7.insert(0, a)
    value7 = entry7.get()
    file_path = Path('users.csv')
    with file_path.open(mode='a', newline='') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fields, delimiter=';')
        if os.path.getsize(file_path) == 0:
            writer.writeheader()
        writer.writerow({
            'username': value5,
            'lastname': value1,
            'firstname': value2,
            'email': value8,
            'password': value6,
            'course1': value4
        })

    # try:
    #     book = openpyxl.load_workbook('users.csv')
    # except FileNotFoundError:
    #     book = openpyxl.Workbook()
    # sheet = book.active
    # sheet['A1'] = 'lastname'
    # sheet['B1'] = 'firstname'
    # # sheet['C1'] = 'father_name'
    # sheet['C1'] = 'username'
    # sheet['D1'] = 'password'
    # sheet['E1'] = 'email'
    # sheet['F1'] = 'course1'
    # # with open('names.csv', 'w', newline='') as csvfile:
    # data = (value1, value2, value5, value6, value8, value7)
    # sheet.append(data)
    # book.save('users.csv')
    # book.close()


window = tk.Tk()
window.geometry(f"600x300+800+400")
window.title("Добавление слушателя на курсы ПК")
tk.Label(window, text='Фамилия',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .grid(row=0, column=0)
tk.Label(window, text='Имя',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .grid(row=1, column=0)
tk.Label(window, text='Отчество',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .grid(row=2, column=0)
tk.Label(window, text='полное_название_курса',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .grid(row=3, column=0)
tk.Label(window, text='логин',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .place(x=0, y=230)
tk.Label(window, text='пароль',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .place(x=0, y=260)
tk.Label(window, text='краткое_название_курса',
         font=('Arial', 14, 'bold'),
         width=22, height=1,
         anchor='w',
         relief=tk.RAISED) \
    .place(x=0, y=290)
# combo = ("Профессиональная подготовка по профессии рабочего  'Животновод'",
#          "Ультразвуковая диагностика болезней внутренних органов мелких домашних животных ЭхоКГ",
#          "Внутренние незаразные болезни сельскохозяйственных животных",
#          "Обслуживание оборудования подстанций электрических сетей",
#          "Организация и функционирование крестьянских фермерских хозяйств",
#          "Контроль технического состояния автотранспортных средств",
#          "Биологическая безопасность при работе с микроорганизмами различных групп патогенности",
#          "Бухгалтерский  учет и налогообложение",
#          "Диспетчерская деятельность в сфере автомобильного и городского наземного электрического транспорта",
#          "Правовые аспекты фармацевтической деятельности в сфере обращения лекарственных средств для ветеринарного применения (Трескин Михаил Сергеевич)",
#          "Безопасность движения на автомобильном транспорте и городском наземном электрическом транспорте",
#          "Разведение и выращивание объектов аквакультуры",
#          "Программа повышения квалификации 'Информационно-коммуникационные технологии  в профессиональной деятельности преподавателя' копия 1",
#          "Программа повышения квалификации 'Информационно-коммуникационные технологии  в профессиональной деятельности преподавателя'",
#          "Программа повышения квалификации 'Реализация инклюзивного образования в вузе'",
#          "Производство экологически чистой продукции растениеводства",
#          "Флористика",
#          "Меры борьбы с борщевиком Сосновского",
#          "Безопасное обращение с пестицидами и агрохимикатами",
#          "Организация профессионального обучения по программам подготовки водителей",
#          "Ультразвуковая диагностика болезней внутренних органов мелких домашних животных",
#          "Безопасность строительства и осуществление строительного контроля",
#          "Кооперация как механизм развития сельскохозяйственного производства и сельских территорий",
#          "Применение графического пакета КОМПАС-3D в производстве и образовании",
#          "Физика",
#          "Проведение послеубойной ветеринарно-санитарной экспертизы мяса и мясопродуктов",
#          "Технология принятия управленческих решений",
#          "Тьюторская и волонтерская деятельность по сопровождению обучающихся с ограниченными возможностями здоровья в образовательной организации профессионального образования",
#          "Русский язык  как иностранный",
#          "Разработка программного обеспечения для микроконтроллеров",
#          "Менеджмент в образовании. Управление структурным подразделением организации.",
#          "Строительство, реконструкция и капитальный ремонт объектов капитального строительства",
#          "Технология переработки мяса и мясопродуктов",
#          "Теория и методика преподавания общеобразовательных дисциплин иностранным студентам",
#          "Немецкий в тестах: эффективно и просто",
#          "Английский в тестах: эффективно и просто",
#          "Безопасность жизнедеятельности в сельскохозяйственном производстве (Величко И.И., Журавлева Н.Н.)",
#          "Возобновляемые источники энергии / Regenerative Energiequellen(Волхонов М.С., Журавлева Н.Н.)",
#          "Обучение охране труда руководителей производственной практики",
#          "Охрана труда",
#          "Педагогические технологии в профессиональном образовании",
#          "Эксплуатация, обслуживание, санитарное содержание и благоустройство многоквартирного дома"
#          )
combo_up = tuple(sorted(courses.keys()))
entry1 = tk.Entry(window, font=('Arial', 14), width=122)
entry1.grid(row=0, column=1)
entry2 = tk.Entry(window, font=('Arial', 14), width=122)
entry2.grid(row=1, column=1)
entry3 = tk.Entry(window, font=('Arial', 14), width=122)
entry3.grid(row=2, column=1)
combo4 = ttk.Combobox(window, font=('Arial', 14), width=120, value=combo_up)
combo4.grid(row=3, column=1)
entry5 = tk.Entry(window, font=('Arial', 14), width=122)
entry5.place(x=270, y=230)
entry6 = tk.Entry(window, font=('Arial', 14), width=122)
entry6.place(x=270, y=260)
entry7 = tk.Entry(window, font=('Arial', 14), width=122)
entry7.place(x=270, y=290)
btn1 = tk.Button(window, text='добавить пользователя', font=('Arial', 14, 'bold'), command=get_entry4) \
    .place(x=150, y=150)


def change_courses_list(event):
    def filter_keys(key: str):
        try:
            # return key.upper().index(event.widget.get().upper()) >= 0 № ищет под строки в любом месте строки
            return key.upper().startswith(event.widget.get().upper())  # ищет подстроки в начале строки
        except ValueError:
            return False

    event.widget['values'] = tuple(sorted(filter(filter_keys, courses.keys())))


combo4.bind('<Key>', change_courses_list)
window.mainloop()